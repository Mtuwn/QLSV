/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BaiTapLon.View;

import Controller.Connect;
import Controller.HandleSubject;
import Model.Subject;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trant
 */
public class SubjectManagement extends javax.swing.JPanel {

    /**
     * Creates new form MonHoc
     */
    List<Subject> list = new ArrayList<Subject>();
    Subject x = new Subject();
    private static int pos = 0;
    private boolean flag = true;

    public SubjectManagement() throws SQLException {
        initComponents();
        viewTable();
    }

    private void view() throws SQLException {

        x = list.get(pos);
        this.textMaMon.setText(x.getMaMon());

        this.textMon.setText(x.getTenMon());
        this.textTin.setText(Integer.toString(x.getSoTin()));
    }

    private void viewTable() throws SQLException {
        DefaultTableModel model = (DefaultTableModel) this.Table1.getModel();
        model.setNumRows(0);
        list.removeAll(list);

        String sql = "	select * From MonHoc ";

        Connection conn = Connect.getConnection();

        try (PreparedStatement preparedStatement = conn.prepareStatement(sql)) {

            // Execute the query and process the results
            ResultSet rs = preparedStatement.executeQuery();
            while (rs.next()) {

                // Process the result set as needed
                x = new Subject(rs.getString(1), rs.getString(2), (rs.getInt(3)));
                list.add(x);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        for (Subject x : list) {
            model.addRow(new Object[]{x.getMaMon(), x.getTenMon(), x.getSoTin()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        textMon = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        addOb = new javax.swing.JButton();
        EditOb = new javax.swing.JButton();
        DeleteOb = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        textTin = new javax.swing.JTextField();
        textMaMon = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMonActionPerformed(evt);
            }
        });

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Mã Môn", "Tên Môn", "Số tín"
            }
        ));
        Table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table1MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(Table1);

        addOb.setText("Thêm");
        addOb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addObActionPerformed(evt);
            }
        });

        EditOb.setText("Sửa");
        EditOb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditObActionPerformed(evt);
            }
        });

        DeleteOb.setText("Xóa");
        DeleteOb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteObActionPerformed(evt);
            }
        });

        jLabel20.setText("Mã môn:");

        jLabel21.setText("Tên môn:");

        jLabel23.setText("Số tín:");

        textTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTinActionPerformed(evt);
            }
        });

        textMaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMaMonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(addOb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EditOb)
                        .addGap(49, 49, 49)
                        .addComponent(DeleteOb)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textTin, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                                .addComponent(textMon, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)))
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(textMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(textMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(textTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditOb)
                    .addComponent(addOb)
                    .addComponent(DeleteOb))
                .addGap(101, 101, 101))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMonActionPerformed

    private void Table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table1MouseClicked
        // TODO add your handling code here:
        pos = this.Table1.getSelectedRow();
        try {
            view();
        } catch (SQLException ex) {
            Logger.getLogger(StudentManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Table1MouseClicked

    private Subject getInput() {
        Subject tmp;

        if (this.textMaMon.getText().trim().isEmpty() || this.textMon.getText().isEmpty() || this.textTin.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng không để trống thông tin");
            return null;
        }
        String MaMon = this.textMaMon.getText();
        String TenMon = this.textMon.getText();
        int SoTin = Integer.parseInt(this.textTin.getText().trim());
        if (SoTin <= 0) {
            JOptionPane.showMessageDialog(null, "Số tín không hợp lệ");
            return null;
        }

//       for(Subject x : list){
//           if(x.getMaMon().equalsIgnoreCase(MaMon) || x.getTenMon().equalsIgnoreCase(TenMon) || SoTin <= 0){
//               JOptionPane.showMessageDialog(null, "Dữ liệu không hợp lệ");
//               return null;
//           }
//       }
        tmp = new Subject(MaMon.trim(), TenMon.trim(), SoTin);

        return tmp;
    }
    private void addObActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addObActionPerformed
        // TODO add your handling code here:
        x = getInput();
        if (x != null) {
            for (Subject i : list) {
                if (i.getMaMon().equalsIgnoreCase(x.getMaMon()) || i.getTenMon().equalsIgnoreCase(x.getTenMon())) {
                    JOptionPane.showMessageDialog(null, "Dữ liệu không hợp lệ");
                    return;
                }

            }

            HandleSubject handle = new HandleSubject();
            try {
                handle.addSubjectDatabase(x);
                viewTable();
            } catch (SQLException ex) {
                Logger.getLogger(SubjectManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(SubjectManagement.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_addObActionPerformed

    private void EditObActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditObActionPerformed
        // TODO add your handling code here:
        x = getInput();
        if (x != null) {
            for (Subject i : list) {
                if (i.getTenMon().equalsIgnoreCase(x.getTenMon()) && !i.getMaMon().equalsIgnoreCase(x.getMaMon())) {
                    JOptionPane.showMessageDialog(null, "Tên môn này đã tồn tại");
                    return;
                }
            }

            HandleSubject handle = new HandleSubject();
            try {
                if (!handle.updateSubjectDatabase(x)) {
                    JOptionPane.showMessageDialog(null, "Mã môn không đúng!!!");
                    return;
                }
                viewTable();
            } catch (SQLException ex) {
                Logger.getLogger(SubjectManagement.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_EditObActionPerformed

    private void DeleteObActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteObActionPerformed

    }//GEN-LAST:event_DeleteObActionPerformed

    private void textTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTinActionPerformed

    private void textMaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMaMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMaMonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteOb;
    private javax.swing.JButton EditOb;
    private javax.swing.JTable Table1;
    private javax.swing.JButton addOb;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField textMaMon;
    private javax.swing.JTextField textMon;
    private javax.swing.JTextField textTin;
    // End of variables declaration//GEN-END:variables
}
